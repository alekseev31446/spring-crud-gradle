/*
 * This file is generated by jOOQ.
 */
package com.example.generated.tables.records;


import com.example.generated.tables.Students;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StudentsRecord extends UpdatableRecordImpl<StudentsRecord> implements Record4<Integer, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.students.id</code>.
     */
    public StudentsRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.students.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.students.firstname</code>.
     */
    public StudentsRecord setFirstname(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.students.firstname</code>.
     */
    public String getFirstname() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.students.middlename</code>.
     */
    public StudentsRecord setMiddlename(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.students.middlename</code>.
     */
    public String getMiddlename() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.students.lastname</code>.
     */
    public StudentsRecord setLastname(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.students.lastname</code>.
     */
    public String getLastname() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, String, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, String, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Students.STUDENTS.ID;
    }

    @Override
    public Field<String> field2() {
        return Students.STUDENTS.FIRSTNAME;
    }

    @Override
    public Field<String> field3() {
        return Students.STUDENTS.MIDDLENAME;
    }

    @Override
    public Field<String> field4() {
        return Students.STUDENTS.LASTNAME;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getFirstname();
    }

    @Override
    public String component3() {
        return getMiddlename();
    }

    @Override
    public String component4() {
        return getLastname();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getFirstname();
    }

    @Override
    public String value3() {
        return getMiddlename();
    }

    @Override
    public String value4() {
        return getLastname();
    }

    @Override
    public StudentsRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public StudentsRecord value2(String value) {
        setFirstname(value);
        return this;
    }

    @Override
    public StudentsRecord value3(String value) {
        setMiddlename(value);
        return this;
    }

    @Override
    public StudentsRecord value4(String value) {
        setLastname(value);
        return this;
    }

    @Override
    public StudentsRecord values(Integer value1, String value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached StudentsRecord
     */
    public StudentsRecord() {
        super(Students.STUDENTS);
    }

    /**
     * Create a detached, initialised StudentsRecord
     */
    public StudentsRecord(Integer id, String firstname, String middlename, String lastname) {
        super(Students.STUDENTS);

        setId(id);
        setFirstname(firstname);
        setMiddlename(middlename);
        setLastname(lastname);
    }
}
